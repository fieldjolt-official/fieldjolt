name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Push schema changes - that's it!
      - name: Push Prisma schema
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd packages/db
          pnpm prisma generate
          pnpm prisma db push --skip-generate --accept-data-loss
          echo "✅ Schema updated"

      # Run tests
      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm test || echo "⚠️ No tests configured yet"

      # Build
      - name: Build
        run: pnpm build

      # Deploy to Vercel
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          npm install -g vercel@latest
          vercel deploy --prod \
            --token=$VERCEL_TOKEN \
            --build-env DATABASE_URL="$DATABASE_URL" \
            --env DATABASE_URL="$DATABASE_URL" \
            --yes

      # Deploy to Cloudflare
      - name: Deploy API to Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd apps/api
          npx wrangler deploy --env production \
            --var DATABASE_URL:"$DATABASE_URL"